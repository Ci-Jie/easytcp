name: Go

on: [ push, pull_request ]

jobs:
  build:
    env:
      CGO_ENABLED: 0
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        go-version: [ 1.14.x, 1.15.x, 1.16.x ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code
      - uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go-version}}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version}}

      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: go build -ldflags="-s -w" -v ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v2

      - name: Test
        run: go test -count=1 -cover -coverprofile=.testCoverage.txt `go list ./... | grep -v /examples/`
